---
import Layout from "@layouts/Layout.astro";
import TauriIcon from "~icons/simple-icons/tauri?raw&width=2.3em&height=2.3em";
import ViteIcon from "~icons/simple-icons/vite?raw&width=2.3em&height=2.3em";
import NeoVimIcon from "~icons/simple-icons/neovim?raw&width=2.3em&height=2.3em";
import NsisIcon from "~icons/simple-icons/nsis?raw&width=2.3em&height=2.3em";
import MoonIcon from "~icons/ri/moon-line?raw&width=2.3em&height=2.3em";
import WifiQRIcon from "@public/wifi-qr-icon.svg?raw";

type RawIcon = (props: astroHTML.JSX.SVGAttributes) => astroHTML.JSX.Element;

interface Projects {
	[key: string]: {
		name: string;
		description: string;
		url: string;
		icon: RawIcon | RawIcon[] | string;
		class?: string;
	}[];
}

const projects: Projects = {
	Tauri: [
		{
			name: "tauri",
			description: "Build smaller, faster, and more secure desktop and mobile applications with a web frontend",
			url: "https://github.com/tauri-apps/tauri",
			icon: TauriIcon,
		},
		{
			name: "create-tauri-app",
			description: "Rapidly scaffold out a new tauri app project",
			url: "https://github.com/tauri-apps/create-tauri-app",
			icon: TauriIcon,
		},
		{
			name: "vite-plugin-tauri",
			description: "Integrate Tauri in a Vite project to build cross-platform apps",
			url: "https://github.com/amrbashir/vite-plugin-tauri",
			icon: [ViteIcon, TauriIcon],
		},
		{
			name: "muda",
			description: "Menu Utilities for Desktop Applications in Rust",
			url: "https://github.com/tauri-apps/muda",
			icon: TauriIcon,
		},
		{
			name: "tray-icon",
			description: "Tray icons for Desktop Applications in Rust",
			url: "https://github.com/tauri-apps/tray-icon",
			icon: TauriIcon,
		},

	],
	Applications: [
		{
			name: "hijri-widget",
			description: "Minimal Android widget for displaying Hijri date",
			url: "https://github.com/amrbashir/hijri-widget",
			icon: MoonIcon,
			class: "scale-x--100",
		},
		{
			name: "wifi-qr",
			description: "A small Windows utiliy to show a QR code for the stored WiFi connections",
			url: "https://github.com/amrbashir/wifi-qr",
			icon: WifiQRIcon,
		},
	],
	Miscellaneous: [
		{
			name: "nvim-docs-view",
			description: "A neovim plugin to display lsp hover documentation in a side panel",
			url: "https://github.com/amrbashir/nvim-docs-view",
			icon: NeoVimIcon,
		},
		{
			name: "nsis-plugin-rs",
			description: "A template for writing an NSIS dill plugin in Rust ",
			url: "https://github.com/amrbashir/nsis-plugin-rs",
			icon: NsisIcon,
		},
	],
};
---

<Layout title="Projects">
	<div class="text-center">
		<h1 class="font-800 text-3xl">Projects</h1>
		<br />
		<p class="opacity-60 italic">Projects that I created or maintaining</p>
		<br />
		<div class="separator w-20ch m-auto"/>
		<br />

		{
			Object.entries(projects).map(([category, projects]) => (
				<h2 class="opacity-60 font-800 italic text-xl">{category}</h2>
				<br />
				<ul class="m-auto grid sm:grid-cols-2">
					{
						projects.map((p) =>(
							<a
								href={p.url}
								target="_blank"
								title={p.name}
								class="text-start color-inherit decoration-none rd-2 p-4 hover:bg-dark/3 dark:hover:bg-light/3 opacity-50 hover:opacity-100 grid grid-cols-[3.75rem_auto] gap-2"
								data-trail-cursor
							>
								<div class="flex justify-center items-center opacity-60" class:list={p.class}>
									{
										Array.isArray(p.icon)
											? (<div class="flex first:children:(translate-x-20% translate-y--30%) last:children:translate-x--20%">
												<Fragment set:html={p.icon} />
											   </div>)
											: (<Fragment set:html={p.icon} />)
									}
								</div>
								<div>
									<div class="text-xl">{p.name}</div>
									<div class="opacity-60 text-sm">{p.description}</div>
								</div>
							</a>
						))
					}
				</ul>
				<br />
			))
		}
	</div>
</Layout>
