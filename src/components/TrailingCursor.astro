<script>
	const isTouchDevice = "ontouchstart" in window || navigator.maxTouchPoints > 0;
	const preferesReducedMotion = window.matchMedia("(prefers-reduced-motion: reduce)").matches;

	if (!isTouchDevice && !preferesReducedMotion) {
		const circle: HTMLElement = document.querySelector("#mouse-circle")!;

		const CIRCLE_RADIUS = 10;
		const TRAIL_SPEED = 10;

		let circleX: number = window.innerWidth / 2 - CIRCLE_RADIUS;
		let circleY: number = window.innerHeight / 2 - CIRCLE_RADIUS;
		let cursorX: number = window.innerWidth / 2;
		let cursorY: number = window.innerHeight / 2;

		function moveCircle(
			x: number,
			y: number,
			width: number = CIRCLE_RADIUS * 2,
			height: number = CIRCLE_RADIUS * 2
		) {
			circle.style.setProperty("--circle-x", `${x}px`);
			circle.style.setProperty("--circle-y", `${y}px`);
			circle.style.setProperty("--circle-width", `${width}px`);
			circle.style.setProperty("--circle-height", `${height}px`);
		}

		function updateCircle() {
			let target = document.elementFromPoint(cursorX, cursorY);
			while (target) {
				if (
					(target.tagName === "A" || target.role === "button") &&
					!target.hasAttribute("data-no-trail-cursor")
				) {
					break;
				}
				target = target.parentElement;
			}

			if (target) {
				const rect = target.getBoundingClientRect();
				circleX += (rect.left - circleX) / TRAIL_SPEED;
				circleY += (rect.top - circleY) / TRAIL_SPEED;
				moveCircle(circleX, circleY, rect.width, rect.height);
			} else {
				circleX += (cursorX - CIRCLE_RADIUS - circleX) / TRAIL_SPEED;
				circleY += (cursorY - CIRCLE_RADIUS - circleY) / TRAIL_SPEED;
				moveCircle(circleX, circleY);
			}

			requestAnimationFrame(updateCircle);
		}
		requestAnimationFrame(updateCircle);

		document.documentElement.addEventListener("mouseenter", (e) => {
			cursorX = e.clientX;
			cursorY = e.clientY;
			circleX = cursorX - CIRCLE_RADIUS;
			circleY = cursorY - CIRCLE_RADIUS;
			// on enter, move the circle to where the cursor is
			moveCircle(circleX, circleY);
			circle.style.display = "block";
		});
		document.documentElement.addEventListener("mousemove", (e) => {
			cursorX = e.clientX;
			cursorY = e.clientY;
			circle.style.display = "block";
		});
		document.documentElement.addEventListener("mouseleave", () => {
			circle.style.display = "none";
		});
	}
</script>

<div id="mouse-circle"></div>

<style>
	#mouse-circle {
		--circle-x: 0px;
		--circle-y: 0px;
		--circle-width: 0px;
		--circle-height: 0px;
		position: fixed;
		display: none;
		width: var(--circle-width);
		height: var(--circle-height);
		left: var(--circle-x);
		top: var(--circle-y);
		border-radius: var(--circle-width);
		border: 0.1rem solid;
		pointer-events: none;
		z-index: 998;
		transition:
			width 200ms,
			height 200ms;
	}
</style>
