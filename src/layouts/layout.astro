---
import NavBar from "../components/NavBar.astro";
import ArrowUp from "~icons/ri/arrow-up-line";

const { title } = Astro.props;
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>{`${title ? title + " Â· " : ""} Amr Bashir`}</title>
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link
			href="https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap"
			rel="stylesheet"
		/>
	</head>

	<body>
		<NavBar />
		<main>
			<slot />
		</main>

		<a id="scroll-to-top" href="#top"><ArrowUp /></a>

		<div id="mouse-circle" style="display: none;"></div>

		<script>
			const circle: HTMLElement = document.querySelector("#mouse-circle")!;

			const CIRCLE_RADIUS = 15;
			const CIRCLE_WIDTH = CIRCLE_RADIUS * 2;
			const HOVER_PADDING = 20;
			const TRAIL_SPEED = 10;

			let circleX: number = window.innerWidth / 2 - CIRCLE_RADIUS;
			let circleY: number = window.innerHeight / 2 - CIRCLE_RADIUS;
			let cursorX: number = window.innerWidth / 2;
			let cursorY: number = window.innerHeight / 2;

			function moveCircle(
				x: number,
				y: number,
				width: number = CIRCLE_WIDTH,
				height: number = CIRCLE_WIDTH
			) {
				circle.style.setProperty("--circle-x", `${x}px`);
				circle.style.setProperty("--circle-y", `${y}px`);
				circle.style.setProperty("--circle-width", `${width}px`);
				circle.style.setProperty("--circle-height", `${height}px`);
			}

			function updateCircle() {
				let target = document.elementFromPoint(cursorX, cursorY);
				while (target) {
					if (target.tagName === "A" || target.role === "button") {
						break;
					}
					target = target.parentElement;
				}

				if (target) {
					const rect = target.getBoundingClientRect();
					circleX += (rect.left - TRAIL_SPEED - circleX) / TRAIL_SPEED;
					circleY += (rect.top - TRAIL_SPEED - circleY) / TRAIL_SPEED;
					moveCircle(
						circleX,
						circleY,
						rect.width + HOVER_PADDING,
						rect.height + HOVER_PADDING
					);
				} else {
					circleX += (cursorX - CIRCLE_RADIUS - circleX) / TRAIL_SPEED;
					circleY += (cursorY - CIRCLE_RADIUS - circleY) / TRAIL_SPEED;
					moveCircle(circleX, circleY);
				}

				requestAnimationFrame(updateCircle);
			}
			requestAnimationFrame(updateCircle);

			document.documentElement.addEventListener("mouseenter", (e) => {
				cursorX = e.clientX;
				cursorY = e.clientY;
				circleX = cursorX - CIRCLE_RADIUS;
				circleY = cursorY - CIRCLE_RADIUS;
				// on enter, move the circle to where the cursor is
				moveCircle(circleX, circleY);
				circle.style.display = "block";
			});
			document.documentElement.addEventListener("mousemove", (e) => {
				cursorX = e.clientX;
				cursorY = e.clientY;
			});
			document.documentElement.addEventListener("mouseleave", () => {
				circle.style.display = "none";
			});

			const scrollToTop: HTMLElement = document.querySelector("#scroll-to-top")!;
			window.addEventListener("scroll", () => {
				if (window.scrollY >= 100) {
					scrollToTop.style.display = "flex";
				} else {
					scrollToTop.style.display = "none";
				}
			});
		</script>
	</body>
</html>

<style is:global>
	:root {
		--color: 5, 5, 5;
		--bg-color: 255, 255, 255;
		--accent: 125, 187, 125;
	}
	html.dark {
		--color: 229, 231, 235;
		--bg-color: 5, 5, 5;
		--accent: 179, 255, 179;
	}

	* {
		margin: 0;
		padding: 0;
		box-sizing: border-box;
	}

	*:focus-visible {
		outline-color: currentColor;
		outline-style: solid;
		outline-width: 0.1rem;
		outline-offset: 0.1rem;
	}

	html {
		height: 100vh;
		width: 100vw;
		scroll-behavior: smooth;
		font-family:
			Inter,
			ui-sans-serif,
			system-ui,
			-apple-system,
			BlinkMacSystemFont,
			Segoe UI,
			Roboto,
			Helvetica Neue,
			Arial,
			Noto Sans,
			sans-serif,
			"Apple Color Emoji",
			"Segoe UI Emoji",
			Segoe UI Symbol,
			"Noto Color Emoji";
	}

	body {
		height: 100%;
		width: 100%;
		color: rgb(var(--color));
		background-color: rgb(var(--bg-color));
	}
	main {
		padding: 32px;
	}

	#mouse-circle {
		--circle-x: 0px;
		--circle-y: 0px;
		--circle-width: 0px;
		--circle-height: 0px;
		position: fixed;
		width: var(--circle-width);
		height: var(--circle-height);
		left: var(--circle-x);
		top: var(--circle-y);
		background-color: rgba(var(--accent), 25%);
		border-radius: var(--circle-width);
		pointer-events: none;
		transition:
			width 200ms,
			height 200ms;
	}

	#scroll-to-top {
		text-decoration: none;

		position: fixed;
		bottom: 20px;
		right: 20px;

		width: 30px;
		height: 30px;

		display: none;
		align-items: center;
		justify-content: center;
		cursor: pointer;

		border-radius: 30px;

		background-color: rgba(var(--accent), 25%);
		color: var(--color);
	}
</style>
